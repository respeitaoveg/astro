---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Registro kd-pet">
  <main class="flex flex-col gap-20 p-4 md:p-20 md:pl-[200px] items-center md:items-start">
    <div class="mt-5 max-w-[200px]">
      <img src="/kdpet-logo.png" alt="" srcset="" width="100%" />
    </div>
    <h1 class="text-4xl md:hidden text-center">ESTAMOS CHEGANDO!</h1>
    <div class="hidden md:block">
      <p class="text-7xl text-start">ESTAMOS</p>
      <p class="text-7xl text-start">CHEGANDO!</p>
    </div>
    <h4 class="text-xl text-center">Entre em nossa lista de espera.</h4>
    <form
      id="submit-l"
      action="submit"
      class="w-[300px] md:w-full md:max-w-[720px] flex flex-col md:flex-row gap-5 items-center"
    >
      <input type="text" placeholder="Nome" />
      <input type="text" placeholder="E-mail" />
      <button type="submit" class="kdpet-button mt-10" role="button">
        Enviar
      </button>
    </form>
  </main>
</Layout>

<script>
  // @ts-ignore
  import SibApiV3Sdk from "sib-api-v3-sdk";

  let form = document.querySelector("#submit-l");

  form?.addEventListener("submit", function (event) {
    event.preventDefault();

    const target = event.target;
    const formFields = target?.elements;

    const nameInput = formFields.name;
    const emailInput = formFields.email;

    let defaultClient = SibApiV3Sdk.ApiClient.instance;

    let apiKey = defaultClient.authentications["api-key"];
    apiKey.apiKey =
      "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";

    let apiInstance = new SibApiV3Sdk.ContactsApi();
    let createContact = new SibApiV3Sdk.CreateContact();

    createContact.email = emailInput.value;
    createContact.attributes = {
      NOME: nameInput.value,
    };

    createContact.listIds = [2];

    apiInstance.createContact(createContact).then(
      function (data) {
        console.log(
          "API called successfully. Returned data: " + JSON.stringify(data)
        );
        alert("Cadastrado com sucesso!");
      },
      function (error) {
        const er = JSON.parse(error.response.text);

        alert(er.message);
      }
    );
  });
</script>

<style>

  input {
    color: #fff;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    padding: 15px;
    padding-left: 25px;
    background-color: transparent;
    outline: 2px solid #fff;
    border-radius: 50px;
  }

  input::placeholder {
    color: #bababa;
  }

  .kdpet-button {
    appearance: button;
    background-color: #EDEDED;
    border: solid transparent;
    border-radius: 50px;
    border-width: 0 0 4px;
    box-sizing: border-box;
    color: #ffffff;
    cursor: pointer;
    display: inline-block;
    font-size: 14px;
    font-weight: 700;
    letter-spacing: 0.8px;
    line-height: 20px;
    margin: 0;
    outline: none;
    overflow: visible;
    padding: 18px 16px;
    text-align: center;
    text-transform: uppercase;
    touch-action: manipulation;
    transform: translateZ(0);
    transition: filter 0.2s;
    user-select: none;
    -webkit-user-select: none;
    vertical-align: middle;
    white-space: nowrap;
    width: 100%;
  }

  .kdpet-button:after {
    background-clip: padding-box;
    background-color: black;
    border: solid transparent;
    border-radius: 50px;
    border-width: 0 0 2px;
    bottom: -4px;
    content: "";
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: -1;
  }

  .kdpet-button:main,
  .kdpet-button:focus {
    user-select: auto;
  }

  .kdpet-button:hover:not(:disabled) {
    filter: brightness(1.1);
    -webkit-filter: brightness(1.1);
  }

  .kdpet-button:disabled {
    cursor: auto;
  }

  .kdpet-button:active {
    border-width: 4px 0 0;
    background: none;
  }
</style>
