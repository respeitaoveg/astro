---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Registro kd-pet">
  <main class="flex flex-col gap-10 p-4 items-center">
    <div class="mt-5 max-w-[200px]">
      <img src="/kdpet-logo.png" alt="" srcset="" width="100%" />
    </div>
    <h1 class="text-4xl text-center">ESTAMOS CHEGANDO!</h1>
    <h4 class="text-xl text-center">Entre em nossa lista de espera.</h4>
    <form
      id="submit-l"
      action="submit"
      class="flex flex-col gap-5 items-center"
    >
      <input type="text" placeholder="Nome" />
      <input type="text" placeholder="E-mail" />

      <button type="submit" class="button-cartoon" role="button">
        Cadastrar
      </button>
    </form>
  </main>
</Layout>

<script>
  // @ts-ignore
  import SibApiV3Sdk from "sib-api-v3-sdk";

  let form = document.querySelector("#submit-l");

  form?.addEventListener("submit", function (event) {
    event.preventDefault();

    const target = event.target;
    const formFields = target?.elements;

    const nameInput = formFields.name;
    const emailInput = formFields.email;

    let defaultClient = SibApiV3Sdk.ApiClient.instance;

    let apiKey = defaultClient.authentications["api-key"];
    apiKey.apiKey =
      "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";

    let apiInstance = new SibApiV3Sdk.ContactsApi();
    let createContact = new SibApiV3Sdk.CreateContact();

    createContact.email = emailInput.value;
    createContact.attributes = {
      NOME: nameInput.value,
    };

    createContact.listIds = [2];

    apiInstance.createContact(createContact).then(
      function (data) {
        console.log(
          "API called successfully. Returned data: " + JSON.stringify(data)
        );
        alert("Cadastrado com sucesso!");
      },
      function (error) {
        const er = JSON.parse(error.response.text);

        alert(er.message);
      }
    );
  });
</script>

<style>
  :focus {
    outline: none;
  }
  input[type="text"] {
    color: #fff;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    padding: 15px;
    padding-left: 25px;
    background-color: transparent;
    border: 1px solid #fff;
    border-radius: 50px;
  }

  input[type="text"]::placeholder {
    color: #BABABA
  }
</style>
